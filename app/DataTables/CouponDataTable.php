<?php

namespace App\DataTables;

use App\Models\Coupon;
use App\Models\User;
use Illuminate\Support\Str;
use Yajra\DataTables\Html\Column;
use Yajra\DataTables\EloquentDataTable;
use Yajra\DataTables\Services\DataTable;
use Yajra\DataTables\Html\Builder as HtmlBuilder;
use Illuminate\Database\Eloquent\Builder as QueryBuilder;

class CouponDataTable extends DataTable
{
    /**
     * Build the DataTable class.
     *
     * @param QueryBuilder $query Results from query() method.
     */
    public function dataTable(QueryBuilder $query): EloquentDataTable
    {
        return (new EloquentDataTable($query))
            ->rawColumns(['id', 'code', 'organization', 'type_id', 'days', 'no_of_delegates', 'email', 'generated_by', 'status', 'payment_reference', 'status'])


            ->editColumn('id', function (Coupon $coupon) {
                return Str::upper($coupon->id);
            })->editColumn('type_id', function (Coupon $coupon) {
                return Str::upper($coupon->ticket?->title);
            })
            ->editColumn('id', function (Coupon $coupon) {
                return Str::upper($coupon->id);
            })->editColumn('days', function (Coupon $coupon) {
                return Str::upper($coupon->days);
            })
            ->editColumn('organization', function (Coupon $coupon) {
                return Str::upper($coupon->organization);
            })
            ->editColumn('email', function (Coupon $coupon) {
                return Str::upper($coupon->email);
            })
            ->editColumn('no_of_delegates', function (Coupon $coupon) {
                return $coupon->no_of_delegates > $coupon->users->count() ?  $coupon->no_of_delegates : $coupon->users->count();
            })
            ->editColumn('redeemed', function (Coupon $coupon) {
                return $coupon->users->count();
            })
            ->editColumn('category', function (Coupon $coupon) {
                return $coupon->category?->name;
            })
            ->editColumn('generated_by', function (Coupon $coupon) {
                return User::find($coupon->generated_by)->name;
            })
           ->editColumn('status', function (Coupon $coupon) {
               return sprintf('<div class="badge badge-%s fw-bold">%s</div>', $this->getStatusColour($coupon->status), $coupon->status);
           })

            ->addColumn('action', function (Coupon $coupon) {
                return view('pages.apps.coupon-management.columns._actions', compact('coupon'));
            })
            ->setRowId('id');
    }


    /**
     * Get the query source of dataTable.
     */
    public function query(Coupon $model): QueryBuilder
    {
        return $model->with('category', 'users')->newQuery();
    }

    /**
     * Optional method if you want to use the html builder.
     */
    public function html(): HtmlBuilder
    {
        return $this->builder()
            ->setTableId('manage-coupons')
            ->columns($this->getColumns())
            ->minifiedAjax()
            ->dom('rt' . "<'row'<'col-sm-12 col-md-5'l><'col-sm-12 col-md-7'p>>", )
            ->addTableClass('table align-middle table-row-dashed fs-6 gy-5 dataTable no-footer text-gray-600 fw-semibold')
            ->setTableHeadClass('text-start text-success fw-bold fs-7 text-uppercase gs-0')
            ->orderBy(0)
            ->drawCallback("function() {" . file_get_contents(resource_path('views/pages/apps/coupon-management/coupon-swal.js')) . "}");
    }

    /**
     * Get the dataTable columns definition.
     */
    public function getColumns(): array
    {
        return [
            Column::make('id')->title('ID')->addClass('align-items-center')->name('id')->hidden(),
            Column::make('code')->title('Code')->addClass('align-items-center'),
            Column::make('days')->title('No of Days')->addClass('align-items-center'),
            Column::make('organization')->title('Organization')->addClass('align-items-left'),
            Column::make('email')->title('Email')->addClass('align-items-left'),
            Column::make('no_of_delegates')->title('Delegates')->addClass('align-items-center'),
            Column::make('redeemed')->title('Redeemed')->addClass('align-items-center')->searchable(false),
            Column::make('generated_by')->title('Generated by')->addClass('align-items-center'),
            Column::make('category')->title('Category')->addClass('align-items-center')->name('category.name'),
            Column::make('status')->title('Status')->addClass('align-items-center'),
            Column::computed('action')
                ->addClass('text-end text-nowrap')
                ->exportable()
                ->printable()
                ->width(60)
        ];
    }

    /**
     * Get the filename for export.
     */
    protected function filename(): string
    {
        return 'Coupons_' . date('YmdHis');
    }

    protected function getStatusColour($status): string
    {
        return match ($status) {
            'inactive' => 'warning',
            'active' => 'success',
            default => 'danger',
        };
    }
}
